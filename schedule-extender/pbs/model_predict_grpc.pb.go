// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package modelpredict

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ModelPredictClient is the client API for ModelPredict service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ModelPredictClient interface {
	Predict(ctx context.Context, in *Usage, opts ...grpc.CallOption) (*Choice, error)
}

type modelPredictClient struct {
	cc grpc.ClientConnInterface
}

func NewModelPredictClient(cc grpc.ClientConnInterface) ModelPredictClient {
	return &modelPredictClient{cc}
}

func (c *modelPredictClient) Predict(ctx context.Context, in *Usage, opts ...grpc.CallOption) (*Choice, error) {
	out := new(Choice)
	err := c.cc.Invoke(ctx, "/modelpredict.ModelPredict/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelPredictServer is the server API for ModelPredict service.
// All implementations must embed UnimplementedModelPredictServer
// for forward compatibility
type ModelPredictServer interface {
	Predict(context.Context, *Usage) (*Choice, error)
	mustEmbedUnimplementedModelPredictServer()
}

// UnimplementedModelPredictServer must be embedded to have forward compatible implementations.
type UnimplementedModelPredictServer struct {
}

func (UnimplementedModelPredictServer) Predict(context.Context, *Usage) (*Choice, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Predict not implemented")
}
func (UnimplementedModelPredictServer) mustEmbedUnimplementedModelPredictServer() {}

// UnsafeModelPredictServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ModelPredictServer will
// result in compilation errors.
type UnsafeModelPredictServer interface {
	mustEmbedUnimplementedModelPredictServer()
}

func RegisterModelPredictServer(s *grpc.Server, srv ModelPredictServer) {
	s.RegisterService(&_ModelPredict_serviceDesc, srv)
}

func _ModelPredict_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Usage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPredictServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modelpredict.ModelPredict/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPredictServer).Predict(ctx, req.(*Usage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModelPredict_serviceDesc = grpc.ServiceDesc{
	ServiceName: "modelpredict.ModelPredict",
	HandlerType: (*ModelPredictServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Predict",
			Handler:    _ModelPredict_Predict_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/model_predict.proto",
}
